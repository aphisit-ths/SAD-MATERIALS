@startuml

class Paros{
    - {static} log :Log = null
    - cmdLine  : CommandLine = null
    ~ {static} sslFactory :ProtocolSocketFactory= null
    - {static} main(string[]) :void
    - {static} init(string[]) :void
    - run() : void
    - runCommandLine():void
    - runGUI():void

}

class Constant{
    + {static}PROGRAM_NAME:String   = "Paros"
    + {static}PROGRAM_VERSION:String   = "3.2.13"
    - {static}Constant:instance = null
    + Constant()
    + {static} getEyeCatcher():String
    + {static} getInstance():Constant


}
class Model{
    - {static}  model :Model = null;
    -  session :Session = null;
    + Model()
    +  getOptionsParam():OptionsParam
    +  getSession():Session
}
class View{
    - {static}  view :View = null
    -  sessionDialog:SessionDialog = null
    -  optionsDialog : OptionsDialog= null
    -  mainFrame : MainFrame = null
    -  requestPanel:HttpPanel = null
    -  responsePanel : HttpPanel= null
    +  init():void
    +  postInit() :void
    +  showDialog(String msg):int
    +  showMessageDialog(String msg):void
    + {static}  getSingleton():View
    +  getOutputPanel() :
}
class Control{
    -   {static}  control: Control = null
    -   proxy : Proxy= null
    -   init() :void
    +   getProxy():Proxy
    #   addExtension():void
    +   getMenuFileControl() :MenuFileControl
    +   {static}  initSingletonWithoutView():void
    +   runCommandLineNewSession(String fileName) :void
}
abstract class AbstractControl{
    #loader :ExtensionLoader = null
    #model :Model = null
    #view :View = null
    + AbstractControl(Model model ,View view)
    + getExtensionLoader():ExtensionLoader
    #loadExtension():void
    #addExtension():void
    #addCommonExtension
    +shutdown(boolean compact):void
}
class MenuFileControl{
    - {static}  log :Log =  LogFactory.getLog MenuFileControl.class
    -  view : View = null
    -  model : Model = null
    -  control : Control= null
    +  exit():void
    +  newSession(boolean isPromptNewSession):void
    +  openSession():void
    +  saveSession() :void
    +  sessionOpened(File file, Exception e):void
    +  sessionSaved(Exception e):void
}

class MenuToolsControl{
    -loader :ExtensionLoader = null 
    -model :Model = null 
    -view :View = null 
    + MenuToolsControl() 
    + MenuToolsControl(Model model, View view, Control control) 
    + options() :void
}
class Proxy {
    
    -  model : Model= null
    -  proxyServer :ProxyServer = null;
    -  proxyServerSSL : ProxyServerSSL= null;
    -  reverseProxy :boolean= false;
    -  reverseProxyHost :String = "";
    + Proxy(Model model)
    +  startServer():void
    +  stopServer():void
}

Paros ..>   Constant :<<use>>
Paros ..>   Model :<<use>>
Paros ..>   View :<<use>>
Paros ..>   Control :<<use>>

Control --|> AbstractControl
Control ..> Model :<<use>>
Control ..> View :<<use>>

View *-- AbstractControl
Model *-- AbstractControl

MenuFileControl ..> Constant :<<use>>
Model *-- MenuFileControl
View *-- MenuFileControl
Control *-- MenuFileControl

MenuToolsControl ..> Constant :<<use>>
Model *-- MenuToolsControl
View *-- MenuToolsControl
Control *-- MenuToolsControl

Model *-- Proxy
Model ..> Constant: <<>>

View ..> Constant:<<use>>


@enduml